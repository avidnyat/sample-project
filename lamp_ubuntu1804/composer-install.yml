---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml
  environment:
          COMPOSER_ALLOW_SUPERUSER: 1
  tasks:
    - name: Create swap file
      command: fallocate -l {{ (2084  | int * 1024 * 1024) }} /swapfile creates="/swapfile"
      tags:
         - swap.file.create
    - name: Change swap file permissions
      file: path="/swapfile"
            owner=root
            group=root
            mode=0600
      tags:
         - swap.file.permissions
    - name: "Check swap file type"
      command: file /swapfile
      register: swapfile
      tags:
         - swap.file.mkswap
    - name: Make swap file
      command: "sudo mkswap /swapfile"
      when: swapfile.stdout.find('swap file') == -1
      tags:
         - swap.file.mkswap
    - name: Write swap entry in fstab
      mount: name=none
             src=/swapfile
             fstype=swap
             opts=sw
             passno=0
             dump=0
             state=present
      tags:
         - swap.fstab
    - name: Mount swap
      command: "swapon /swapfile"
      when: ansible_swaptotal_mb < 1
      tags:
         - swap.file.swapon
    - name: install composer
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer
    - name: disable composer root warning message
      shell: export COMPOSER_ALLOW_SUPERUSER=1
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - composer:
        command: install
        arguments: -n -vvv
        working_dir: /var/www/html/releases/release_{{ version }}
    - name: install npm
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'npm']
    - name: upgrade npm
      shell: npm i -g npm@latest
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: install package.json
      shell: npm install
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: install run dev
      shell: npm run dev
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: encryption key
      shell: php artisan key:generate
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: config clear
      shell: php artisan config:clear
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: cache clear
      shell: php artisan cache:clear
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: artisan migrate
      shell: php artisan migrate
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: artisan test
      shell: php artisan test
      args:
        chdir: /var/www/html/releases/release_{{ version }}
    - name: make directory writable
      shell: chmod -R 0777 .
      args:
        chdir: /var/www/html/releases/
